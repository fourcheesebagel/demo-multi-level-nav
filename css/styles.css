
body {
    font-family: sans-serif;
}

header {
    max-width: 58rem;
    margin: 0 auto;
}

/* Step 1. Style all the menu links for the smallest screen first
Text Styling goes on the ANCHOR tag, to overwrite the browser styles.
Layout and spacing properties goes on to the li elements!!!! */

ul.menu {
    background-color: #191919;
}

ul.menu a {
    color: #f5f5f5;
    text-transform: uppercase;
    display:block; 
    padding: 0 1rem;
}

ul.menu li {
    line-height: 2.5rem; 
    margin-bottom: 0.5rem;
    position: relative; /*to make the positioning of the submenu later on in the media query relative to the parent class*/
    /*Allows us to position the dropdown absolutely but relative to this element*/
}

ul.menu a:hover,
ul.menu a:active {
    background-color: #262626;
    border-radius: 5px;
}

ul.submenu {
    padding: 0 1rem;
}

ul.submenu a {
    text-decoration: none;
}

svg {
    display: none;
}

@media screen and (min-width: 58rem) {
    ul.menu {
        display: flex;
        justify-content: space-between;
    }

    ul.menu li {
        flex: 1 0 auto; /*to make the li grow and fit the leftover space, also affects the anchor tags inside bc they are set for display:block*/
        text-align: center;
        margin-bottom: 0;
    }

    li.dropdown a {
        display: flex;
        justify-content: center;
        gap: 0.5rem;
    }

    svg {
        width: 1rem;
        display: block;
    }

    svg path {
        fill: #f5f5f5;
    }

    /* Step 2. Position and hide the dropdown submenu */
    ul.submenu {
        padding: 0;
        position: absolute;
        right: 0;
        background-color: #191919; /* have to re apply the background colour back to the submenu headings*/
        border-radius: 0 0 5px 5px;
        /*To hide the dropdown*/
        visibility: hidden;
        opacity: 0;
    }

    /* Step 3. Add a hover state that will show the submenu */
    ul.menu li:hover > ul.submenu {
        visibility: visible;
        opacity: 1;
    }

    /* Step 4. Add transition to remove the clunkiness */
    ul.submenu {
        transition: all 0.2s ease;
    }

    /* Step 5. Add keyboard accessibility using a focus-within state */
    ul.menu li:focus-within > ul.submenu,
    ul.menu li > ul:focus {
        visibility: visible;
        opacity: 1;
        display: block;
    }


}